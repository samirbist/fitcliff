-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

-- DROP SEQUENCE public.customer_group_id_seq;

CREATE SEQUENCE public.customer_group_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.customer_group_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.customer_group_id_seq TO postgres;

-- DROP SEQUENCE public.customer_id_seq;

CREATE SEQUENCE public.customer_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.customer_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.customer_id_seq TO postgres;

-- DROP SEQUENCE public.document_id_seq;

CREATE SEQUENCE public.document_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.document_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.document_id_seq TO postgres;

-- DROP SEQUENCE public.group_payment_id_seq;

CREATE SEQUENCE public.group_payment_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.group_payment_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.group_payment_id_seq TO postgres;

-- DROP SEQUENCE public.image_id_seq;

CREATE SEQUENCE public.image_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.image_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.image_id_seq TO postgres;

-- DROP SEQUENCE public.ind_customer_payment_id_seq;

CREATE SEQUENCE public.ind_customer_payment_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.ind_customer_payment_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.ind_customer_payment_id_seq TO postgres;

-- DROP SEQUENCE public.phone_id_seq;

CREATE SEQUENCE public.phone_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;

-- Permissions

ALTER SEQUENCE public.phone_id_seq OWNER TO postgres;
GRANT ALL ON SEQUENCE public.phone_id_seq TO postgres;
-- public.customer_group definition

-- Drop table

-- DROP TABLE public.customer_group;

CREATE TABLE public.customer_group (
	"date" date NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	grpname varchar(255) NOT NULL,
	CONSTRAINT customer_group_pkey PRIMARY KEY (id),
	CONSTRAINT customer_group_name UNIQUE (grpname)
);

-- Permissions

ALTER TABLE public.customer_group OWNER TO postgres;
GRANT ALL ON TABLE public.customer_group TO postgres;


-- public."document" definition

-- Drop table

-- DROP TABLE public."document";

CREATE TABLE public."document" (
	created_on date NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	file_name varchar(255) NULL,
	mongo_id varchar(255) NULL,
	CONSTRAINT document_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public."document" OWNER TO postgres;
GRANT ALL ON TABLE public."document" TO postgres;


-- public.image definition

-- Drop table

-- DROP TABLE public.image;

CREATE TABLE public.image (
	created_on date NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	file_name varchar(255) NULL,
	mongo_id varchar(255) NULL,
	CONSTRAINT image_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public.image OWNER TO postgres;
GRANT ALL ON TABLE public.image TO postgres;


-- public.customer definition

-- Drop table

-- DROP TABLE public.customer;

CREATE TABLE public.customer (
	birthdate date NOT NULL,
	is_active bool NOT NULL,
	join_date date NOT NULL,
	reg_date date NULL,
	document_id int8 NULL,
	group_id int8 NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	image_id int8 NULL,
	address text NOT NULL,
	email varchar(255)  NULL,
	first_name varchar(255) NOT NULL,
	gender varchar(255) NOT NULL,
	last_name varchar(255) NOT NULL,
	membership_amount varchar(255) NOT NULL,
	membership_duration varchar(255) NOT NULL,
	membership_type varchar(255) NOT NULL,
	CONSTRAINT customer_document_id_key UNIQUE (document_id),
	CONSTRAINT customer_gender_check CHECK (((gender)::text = ANY ((ARRAY['MALE'::character varying, 'FEMALE'::character varying])::text[]))),
	CONSTRAINT customer_image_id_key UNIQUE (image_id),
	CONSTRAINT customer_membership_duration_check CHECK (((membership_duration)::text = ANY ((ARRAY['ONE_MONTH'::character varying, 'THREE_MONTHS'::character varying, 'SIX_MONTHS'::character varying, 'ONE_YEAR'::character varying])::text[]))),
	CONSTRAINT customer_membership_type_check CHECK (((membership_type)::text = ANY ((ARRAY['INDIVIDUAL'::character varying, 'GROUP'::character varying])::text[]))),
	CONSTRAINT customer_pkey PRIMARY KEY (id),
	CONSTRAINT customer_group FOREIGN KEY (group_id) REFERENCES public.customer_group(id),
	CONSTRAINT cutomer_image FOREIGN KEY (image_id) REFERENCES public.image(id),
	CONSTRAINT cutomer_document FOREIGN KEY (document_id) REFERENCES public."document"(id)
);

ALTER TABLE public.customer ADD COLUMN customer_text_idx tsvector;

-- Create a function to update the tsvector column
CREATE OR REPLACE FUNCTION update_customer_text_idx() RETURNS trigger AS $$
BEGIN
   NEW.customer_text_idx := to_tsvector('english', 
       coalesce(NEW.first_name, '') || ' ' || 
       coalesce(NEW.last_name, '') || ' ' || 
       coalesce(NEW.address, '') || ' ' || 
       coalesce(NEW.email, ''));
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create the trigger
CREATE TRIGGER trigger_update_customer_text_idx
BEFORE INSERT OR UPDATE ON public.customer
FOR EACH ROW
EXECUTE FUNCTION update_customer_text_idx();

CREATE INDEX idx_fts ON public.customer USING gin(customer_text_idx);



-- Permissions

ALTER TABLE public.customer OWNER TO postgres;
GRANT ALL ON TABLE public.customer TO postgres;


-- public.group_payment definition

-- Drop table

-- DROP TABLE public.group_payment;

CREATE TABLE public.group_payment (
	"date" date NOT NULL,
	group_id int8 NOT NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	amount varchar(255) NOT NULL,
	payment_type varchar(255) NOT NULL,
	pending_amount varchar(255) NULL,
	CONSTRAINT group_payment_payment_type_check CHECK (((payment_type)::text = ANY ((ARRAY['CASH'::character varying, 'UPI'::character varying])::text[]))),
	CONSTRAINT group_payment_pkey PRIMARY KEY (id),
	CONSTRAINT payment_group FOREIGN KEY (group_id) REFERENCES public.customer_group(id)
);

-- Permissions

ALTER TABLE public.group_payment OWNER TO postgres;
GRANT ALL ON TABLE public.group_payment TO postgres;


-- public.ind_customer_payment definition

-- Drop table

-- DROP TABLE public.ind_customer_payment;

CREATE TABLE public.ind_customer_payment (
	"date" date NOT NULL,
	customer_id int8 NOT NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	amount varchar(255) NOT NULL,
	payment_type varchar(255) NOT NULL,
	pending_amount varchar(255) NULL,
	CONSTRAINT ind_customer_payment_payment_type_check CHECK (((payment_type)::text = ANY ((ARRAY['CASH'::character varying, 'UPI'::character varying])::text[]))),
	CONSTRAINT ind_customer_payment_pkey PRIMARY KEY (id),
	CONSTRAINT payment_customer FOREIGN KEY (customer_id) REFERENCES public.customer(id)
);

-- Permissions

ALTER TABLE public.ind_customer_payment OWNER TO postgres;
GRANT ALL ON TABLE public.ind_customer_payment TO postgres;


-- public.phone definition

-- Drop table

-- DROP TABLE public.phone;

CREATE TABLE public.phone (
	customer_fk int8 NOT NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"number" varchar(255) NULL,
	CONSTRAINT phone_pkey PRIMARY KEY (id),
	CONSTRAINT phone_customer FOREIGN KEY (customer_fk) REFERENCES public.customer(id)
);

-- Permissions

ALTER TABLE public.phone OWNER TO postgres;
GRANT ALL ON TABLE public.phone TO postgres;


CREATE TABLE public."role" (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar(255) NULL,
	CONSTRAINT role_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public."role" OWNER TO postgres;
GRANT ALL ON TABLE public."role" TO postgres;

-- public.users definition

-- Drop table

-- DROP TABLE public.users;

CREATE TABLE public.users (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	role_fk int8 NOT NULL,
	display_name varchar(255) NULL,
	email varchar(255) NULL,
	"password" varchar(255) NULL,
	user_name varchar(255) NOT NULL,
	CONSTRAINT users_pkey PRIMARY KEY (id),
	CONSTRAINT users_user_name_key UNIQUE (user_name)
);

-- Permissions

ALTER TABLE public.users OWNER TO postgres;
GRANT ALL ON TABLE public.users TO postgres;


-- public.users foreign keys

ALTER TABLE public.users ADD CONSTRAINT user_role_fk FOREIGN KEY (role_fk) REFERENCES public."role"(id);

-- public.userphone definition

-- Drop table

-- DROP TABLE public.userphone;

CREATE TABLE public.userphone (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	user_fk int8 NOT NULL,
	"number" varchar(255) NULL,
	CONSTRAINT userphone_pkey PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public.userphone OWNER TO postgres;
GRANT ALL ON TABLE public.userphone TO postgres;


-- public.userphone foreign keys

ALTER TABLE public.userphone ADD CONSTRAINT phone_user_fk FOREIGN KEY (user_fk) REFERENCES public.users(id);
-- Permissions

GRANT ALL ON SCHEMA public TO pg_database_owner;
GRANT USAGE ON SCHEMA public TO public;

INSERT INTO public."role"
( "name")
VALUES('ADMIN');

INSERT INTO public.users
(role_fk, display_name, email, "password", user_name)
VALUES(1, 'fitcliffadmin', 'samir.bist@gmail.com', 'fitcliffadmin', 'fitcliffadmin');

INSERT INTO public.userphone
(user_fk, "number")
VALUES(1, '9868214732');